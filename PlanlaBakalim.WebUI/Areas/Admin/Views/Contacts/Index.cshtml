@model IEnumerable<PlanlaBakalim.Core.Entities.Contact>
@{
    ViewData["Title"] = "Mesajlar";
}

@Html.AntiForgeryToken()

<div class="d-flex justify-content-between align-items-center mb-4">
    <h2><i class="fas fa-inbox"></i> Mesajlar</h2>
    <form method="get" class="d-flex gap-2">
        <input type="text" name="q" value="@ViewBag.Query" class="form-control" placeholder="Ara: ad, e-posta, konu" />
        <select name="filter" class="form-select">
            <option value="all" selected="@(ViewBag.Filter=="all"?"selected":"")">Tümü</option>
            <option value="unread" selected ="@(ViewBag.Filter=="unread"?"selected":"")">Okunmamış</option>
            <option value="read" selected="@(ViewBag.Filter=="read"?"selected":"")">Okunmuş</option>
        </select>
        <button class="btn btn-admin" type="submit"><i class="fas fa-search"></i> Ara</button>
    </form>
    </div>

<div class="row mb-4">
    <div class="col-md-3">
        <div class="stat-card primary">
            <div class="d-flex justify-content-between align-items-center">
                <div>
                    <div class="text-xs">Toplam</div>
                    <div class="h5">@ViewBag.TotalCount</div>
                </div>
                <i class="fas fa-inbox stat-icon text-primary"></i>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="stat-card warning">
            <div class="d-flex justify-content-between align-items-center">
                <div>
                    <div class="text-xs">Okunmamış</div>
                    <div class="h5">@Model.Count(m => !m.IsRead)</div>
                </div>
                <i class="fas fa-envelope stat-icon text-warning"></i>
            </div>
        </div>
    </div>
</div>

<div class="card">
    <div class="card-header">
        <h5 class="card-title mb-0"><i class="fas fa-list"></i> Mesaj Listesi</h5>
    </div>
    <div class="card-body">
        <div class="table-responsive">
            <table class="table table-admin">
                <thead>
                    <tr>
                        <th>Durum</th>
                        <th>Gönderen</th>
                        <th>E-posta</th>
                        <th>Konu</th>
                        <th>Tarih</th>
                        <th>İşlemler</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr class="@(item.IsRead ? "" : "table-warning")">
                            <td>
                                @if (item.IsRead)
                                {
                                    <span class="badge bg-success">Okundu</span>
                                }
                                else
                                {
                                    <span class="badge bg-warning text-dark">Okunmadı</span>
                                }
                            </td>
                            <td>@item.Name</td>
                            <td>@item.Email</td>
                            <td>@item.Subject</td>
                            <td>@item.CreatedDate.ToString("dd.MM.yyyy HH:mm")</td>
                            <td>
                                <div class="btn-group" role="group">
                                    <a href="@Url.Action("Details", new { id = item.Id })" class="btn btn-sm btn-outline-primary" title="Detaylar">
                                        <i class="fas fa-eye"></i>
                                    </a>
                                    <button class="btn btn-sm btn-outline-secondary" onclick="toggleRead(@item.Id)" title="Okundu/Okunmadı">
                                        <i class="fas fa-envelope-open-text"></i>
                                    </button>
                                    <button class="btn btn-sm btn-outline-danger" onclick="deleteMessage(@item.Id)" title="Sil">
                                        <i class="fas fa-trash"></i>
                                    </button>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function toggleRead(id) {
            fetch(`@Url.Action("ToggleRead")/${id}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest',
                    'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                }
            }).then(r => r.json()).then(d => { if (d.success) location.reload(); });
        }
        function deleteMessage(id) {
            if (!confirm('Bu mesajı silmek istiyor musunuz?')) return;
            fetch(`@Url.Action("Delete")/${id}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest',
                    'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                }
            }).then(r => r.json()).then(d => { if (d.success) location.reload(); else alert(d.message); });
        }
    </script>
}

@if (ViewBag.TotalPages > 1)
{
    <nav aria-label="Sayfa navigasyonu" class="mt-4">
        <ul class="pagination justify-content-center">
            @if (ViewBag.CurrentPage > 1)
            {
                <li class="page-item">
                    <a class="page-link" href="@Url.Action("Index", new { page = ViewBag.CurrentPage - 1, pageSize = ViewBag.PageSize, q = ViewBag.Query, filter = ViewBag.Filter })">
                        <i class="fas fa-chevron-left"></i> Önceki
                    </a>
                </li>
            }
            else
            {
                <li class="page-item disabled">
                    <span class="page-link"><i class="fas fa-chevron-left"></i> Önceki</span>
                </li>
            }

            @{
                int startPage = Math.Max(1, ViewBag.CurrentPage - 2);
                int endPage = Math.Min(ViewBag.TotalPages, ViewBag.CurrentPage + 2);
            }

            @for (int i = startPage; i <= endPage; i++)
            {
                <li class="page-item @(i == ViewBag.CurrentPage ? "active" : "")">
                    <a class="page-link" href="@Url.Action("Index", new { page = i, pageSize = ViewBag.PageSize, q = ViewBag.Query, filter = ViewBag.Filter })">@i</a>
                </li>
            }

            @if (endPage < ViewBag.TotalPages)
            {
                <li class="page-item">
                    <a class="page-link" href="@Url.Action("Index", new { page = ViewBag.TotalPages, pageSize = ViewBag.PageSize, q = ViewBag.Query, filter = ViewBag.Filter })">@ViewBag.TotalPages</a>
                </li>
            }

            @if (ViewBag.CurrentPage < ViewBag.TotalPages)
            {
                <li class="page-item">
                    <a class="page-link" href="@Url.Action("Index", new { page = ViewBag.CurrentPage + 1, pageSize = ViewBag.PageSize, q = ViewBag.Query, filter = ViewBag.Filter })">
                        Sonraki <i class="fas fa-chevron-right"></i>
                    </a>
                </li>
            }
            else
            {
                <li class="page-item disabled">
                    <span class="page-link">Sonraki <i class="fas fa-chevron-right"></i></span>
                </li>
            }
        </ul>
    </nav>
}


