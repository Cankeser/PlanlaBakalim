@{
    ViewData["Title"] = "Sistem Ayarları";
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <h2><i class="fas fa-cog"></i> Sistem Ayarları</h2>
</div>

<div class="row">
    <div class="col-md-8">
        <div class="card">
            <div class="card-header">
                <h5 class="card-title mb-0">
                    <i class="fas fa-sliders-h"></i> Genel Ayarlar
                </h5>
            </div>
            <div class="card-body">
                <form id="settingsForm">
                    <div class="row">
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label for="SiteName" class="form-label">Site Adı</label>
                                <input type="text" class="form-control" id="SiteName" name="SiteName" value="@Model.SiteName">
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label for="ContactEmail" class="form-label">İletişim E-postası</label>
                                <input type="email" class="form-control" id="ContactEmail" name="ContactEmail" value="@Model.ContactEmail">
                            </div>
                        </div>
                    </div>
                    
                    <div class="mb-3">
                        <label for="SiteDescription" class="form-label">Site Açıklaması</label>
                        <textarea class="form-control" id="SiteDescription" name="SiteDescription" rows="3">@Model.SiteDescription</textarea>
                    </div>
                    
                    <div class="row">
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label for="ContactPhone" class="form-label">İletişim Telefonu</label>
                                <input type="text" class="form-control" id="ContactPhone" name="ContactPhone" value="@Model.ContactPhone">
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label for="MaxAppointmentPerDay" class="form-label">Günlük Maksimum Randevu</label>
                                <input type="number" class="form-control" id="MaxAppointmentPerDay" name="MaxAppointmentPerDay" value="@Model.MaxAppointmentPerDay">
                            </div>
                        </div>
                    </div>
                    
                    <div class="row">
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label for="AppointmentDuration" class="form-label">Randevu Süresi (Dakika)</label>
                                <input type="number" class="form-control" id="AppointmentDuration" name="AppointmentDuration" value="@Model.AppointmentDuration">
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label class="form-label">Bildirim Ayarları</label>
                                <div class="form-check">
                                    <input class="form-check-input" type="checkbox" id="EmailNotifications" name="EmailNotifications" @(Model.EmailNotifications ? "checked" : "")>
                                    <label class="form-check-label" for="EmailNotifications">
                                        E-posta Bildirimleri
                                    </label>
                                </div>
                                <div class="form-check">
                                    <input class="form-check-input" type="checkbox" id="SmsNotifications" name="SmsNotifications" @(Model.SmsNotifications ? "checked" : "")>
                                    <label class="form-check-label" for="SmsNotifications">
                                        SMS Bildirimleri
                                    </label>
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <div class="mb-3">
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" id="AutoApproveAppointments" name="AutoApproveAppointments" @(Model.AutoApproveAppointments ? "checked" : "")>
                            <label class="form-check-label" for="AutoApproveAppointments">
                                Randevuları Otomatik Onayla
                            </label>
                        </div>
                    </div>
                    
                    <div class="mb-3">
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" id="MaintenanceMode" name="MaintenanceMode" @(Model.MaintenanceMode ? "checked" : "")>
                            <label class="form-check-label" for="MaintenanceMode">
                                Bakım Modu
                            </label>
                        </div>
                    </div>
                    
                    <div class="d-flex justify-content-end">
                        <button type="submit" class="btn btn-admin">
                            <i class="fas fa-save"></i> Ayarları Kaydet
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
    
    <div class="col-md-4">
        <div class="card">
            <div class="card-header">
                <h5 class="card-title mb-0">
                    <i class="fas fa-tools"></i> Sistem Araçları
                </h5>
            </div>
            <div class="card-body">
                <div class="d-grid gap-2">
                    <button class="btn btn-outline-warning" onclick="clearCache()">
                        <i class="fas fa-broom"></i> Önbelleği Temizle
                    </button>
                    <button class="btn btn-outline-info" onclick="backupDatabase()">
                        <i class="fas fa-database"></i> Veritabanı Yedekle
                    </button>
                    <button class="btn btn-outline-success" onclick="generateReport()">
                        <i class="fas fa-file-alt"></i> Rapor Oluştur
                    </button>
                </div>
            </div>
        </div>
        
        <div class="card mt-3">
            <div class="card-header">
                <h5 class="card-title mb-0">
                    <i class="fas fa-info-circle"></i> Sistem Bilgileri
                </h5>
            </div>
            <div class="card-body">
                <div class="mb-2">
                    <strong>Versiyon:</strong> 1.0.0
                </div>
                <div class="mb-2">
                    <strong>Son Güncelleme:</strong> @DateTime.Now.ToString("dd.MM.yyyy")
                </div>
                <div class="mb-2">
                    <strong>Sunucu:</strong> @Environment.MachineName
                </div>
                <div class="mb-2">
                    <strong>Çalışma Süresi:</strong> 
                    <span id="uptime">Hesaplanıyor...</span>
                </div>
            </div>
        </div>
        
        <div class="card mt-3">
            <div class="card-header">
                <h5 class="card-title mb-0">
                    <i class="fas fa-exclamation-triangle"></i> Dikkat
                </h5>
            </div>
            <div class="card-body">
                <div class="alert alert-warning">
                    <h6>Önemli Notlar:</h6>
                    <ul class="mb-0">
                        <li>Ayarlar değişiklikleri anında etkili olur</li>
                        <li>Bakım modu aktifken site kullanıcılara kapalı olur</li>
                        <li>Önbellek temizleme işlemi performansı etkileyebilir</li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Settings form submission
        document.getElementById('settingsForm').addEventListener('submit', function(e) {
            e.preventDefault();
            
            const formData = new FormData(this);
            const settings = Object.fromEntries(formData);
            
            fetch('@Url.Action("UpdateSettings", "Settings", new { area = "Admin" })', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                },
                body: JSON.stringify(settings)
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    AdminPanel.showAlert('Ayarlar başarıyla güncellendi.', 'success');
                } else {
                    AdminPanel.showAlert('Ayarlar güncellenirken hata oluştu.', 'danger');
                }
            })
            .catch(error => {
                AdminPanel.showAlert('Ayarlar güncellenirken hata oluştu.', 'danger');
            });
        });
        
        function clearCache() {
            if (confirm('Önbelleği temizlemek istediğinizden emin misiniz?')) {
                fetch('@Url.Action("ClearCache", "Settings", new { area = "Admin" })', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                    }
                })
                .then(response => response.json())
                .then(data => {
                    AdminPanel.showAlert(data.message, data.success ? 'success' : 'danger');
                })
                .catch(error => {
                    AdminPanel.showAlert('İşlem sırasında hata oluştu.', 'danger');
                });
            }
        }
        
        function backupDatabase() {
            if (confirm('Veritabanı yedekleme işlemini başlatmak istediğinizden emin misiniz?')) {
                fetch('@Url.Action("BackupDatabase", "Settings", new { area = "Admin" })', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                    }
                })
                .then(response => response.json())
                .then(data => {
                    AdminPanel.showAlert(data.message, data.success ? 'success' : 'danger');
                })
                .catch(error => {
                    AdminPanel.showAlert('İşlem sırasında hata oluştu.', 'danger');
                });
            }
        }
        
        function generateReport() {
            window.open('@Url.Action("Index", "Reports", new { area = "Admin" })', '_blank');
        }
        
        // Calculate uptime
        function updateUptime() {
            const startTime = new Date('@DateTime.Now.AddHours(-2).ToString("yyyy-MM-ddTHH:mm:ss")');
            const now = new Date();
            const diff = now - startTime;
            
            const hours = Math.floor(diff / (1000 * 60 * 60));
            const minutes = Math.floor((diff % (1000 * 60 * 60)) / (1000 * 60));
            
            document.getElementById('uptime').textContent = hours + ' saat ' + minutes + ' dakika';
        }
        
        updateUptime();
        setInterval(updateUptime, 60000); // Update every minute
    </script>
}

